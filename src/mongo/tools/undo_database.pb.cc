// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: undo_database.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "undo_database.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace UndoProto {

namespace {

const ::google::protobuf::Descriptor* DataAccessList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataAccessList_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataAccessUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataAccessUnit_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_undo_5fdatabase_2eproto() {
  protobuf_AddDesc_undo_5fdatabase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "undo_database.proto");
  GOOGLE_CHECK(file != NULL);
  DataAccessList_descriptor_ = file->message_type(0);
  static const int DataAccessList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessList, msgs_),
  };
  DataAccessList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataAccessList_descriptor_,
      DataAccessList::default_instance_,
      DataAccessList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataAccessList));
  DataAccessUnit_descriptor_ = file->message_type(1);
  static const int DataAccessUnit_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessUnit, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessUnit, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessUnit, readids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessUnit, writeids_),
  };
  DataAccessUnit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataAccessUnit_descriptor_,
      DataAccessUnit::default_instance_,
      DataAccessUnit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessUnit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAccessUnit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataAccessUnit));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_undo_5fdatabase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataAccessList_descriptor_, &DataAccessList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataAccessUnit_descriptor_, &DataAccessUnit::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_undo_5fdatabase_2eproto() {
  delete DataAccessList::default_instance_;
  delete DataAccessList_reflection_;
  delete DataAccessUnit::default_instance_;
  delete DataAccessUnit_reflection_;
}

void protobuf_AddDesc_undo_5fdatabase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023undo_database.proto\022\tUndoProto\"9\n\016Data"
    "AccessList\022\'\n\004msgs\030\001 \003(\0132\031.UndoProto.Dat"
    "aAccessUnit\"O\n\016DataAccessUnit\022\n\n\002id\030\001 \002("
    "\t\022\016\n\006source\030\002 \001(\t\022\017\n\007readIds\030\003 \003(\t\022\020\n\010wr"
    "iteIds\030\004 \003(\tB\035\n\017pt.inesc.sharedB\nDatabas"
    "ePB", 203);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "undo_database.proto", &protobuf_RegisterTypes);
  DataAccessList::default_instance_ = new DataAccessList();
  DataAccessUnit::default_instance_ = new DataAccessUnit();
  DataAccessList::default_instance_->InitAsDefaultInstance();
  DataAccessUnit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_undo_5fdatabase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_undo_5fdatabase_2eproto {
  StaticDescriptorInitializer_undo_5fdatabase_2eproto() {
    protobuf_AddDesc_undo_5fdatabase_2eproto();
  }
} static_descriptor_initializer_undo_5fdatabase_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DataAccessList::kMsgsFieldNumber;
#endif  // !_MSC_VER

DataAccessList::DataAccessList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataAccessList::InitAsDefaultInstance() {
}

DataAccessList::DataAccessList(const DataAccessList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataAccessList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataAccessList::~DataAccessList() {
  SharedDtor();
}

void DataAccessList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataAccessList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataAccessList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataAccessList_descriptor_;
}

const DataAccessList& DataAccessList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_undo_5fdatabase_2eproto();
  return *default_instance_;
}

DataAccessList* DataAccessList::default_instance_ = NULL;

DataAccessList* DataAccessList::New() const {
  return new DataAccessList;
}

void DataAccessList::Clear() {
  msgs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataAccessList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UndoProto.DataAccessUnit msgs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msgs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_msgs;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataAccessList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .UndoProto.DataAccessUnit msgs = 1;
  for (int i = 0; i < this->msgs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->msgs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataAccessList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .UndoProto.DataAccessUnit msgs = 1;
  for (int i = 0; i < this->msgs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->msgs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataAccessList::ByteSize() const {
  int total_size = 0;

  // repeated .UndoProto.DataAccessUnit msgs = 1;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataAccessList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataAccessList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataAccessList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataAccessList::MergeFrom(const DataAccessList& from) {
  GOOGLE_CHECK_NE(&from, this);
  msgs_.MergeFrom(from.msgs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataAccessList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataAccessList::CopyFrom(const DataAccessList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataAccessList::IsInitialized() const {

  for (int i = 0; i < msgs_size(); i++) {
    if (!this->msgs(i).IsInitialized()) return false;
  }
  return true;
}

void DataAccessList::Swap(DataAccessList* other) {
  if (other != this) {
    msgs_.Swap(&other->msgs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataAccessList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataAccessList_descriptor_;
  metadata.reflection = DataAccessList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataAccessUnit::kIdFieldNumber;
const int DataAccessUnit::kSourceFieldNumber;
const int DataAccessUnit::kReadIdsFieldNumber;
const int DataAccessUnit::kWriteIdsFieldNumber;
#endif  // !_MSC_VER

DataAccessUnit::DataAccessUnit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataAccessUnit::InitAsDefaultInstance() {
}

DataAccessUnit::DataAccessUnit(const DataAccessUnit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataAccessUnit::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  source_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataAccessUnit::~DataAccessUnit() {
  SharedDtor();
}

void DataAccessUnit::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (source_ != &::google::protobuf::internal::kEmptyString) {
    delete source_;
  }
  if (this != default_instance_) {
  }
}

void DataAccessUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataAccessUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataAccessUnit_descriptor_;
}

const DataAccessUnit& DataAccessUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_undo_5fdatabase_2eproto();
  return *default_instance_;
}

DataAccessUnit* DataAccessUnit::default_instance_ = NULL;

DataAccessUnit* DataAccessUnit::New() const {
  return new DataAccessUnit;
}

void DataAccessUnit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_source()) {
      if (source_ != &::google::protobuf::internal::kEmptyString) {
        source_->clear();
      }
    }
  }
  readids_.Clear();
  writeids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataAccessUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_source;
        break;
      }

      // optional string source = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_readIds;
        break;
      }

      // repeated string readIds = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_readIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_readids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->readids(this->readids_size() - 1).data(),
            this->readids(this->readids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_readIds;
        if (input->ExpectTag(34)) goto parse_writeIds;
        break;
      }

      // repeated string writeIds = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_writeIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_writeids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->writeids(this->writeids_size() - 1).data(),
            this->writeids(this->writeids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_writeIds;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataAccessUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // optional string source = 2;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->source(), output);
  }

  // repeated string readIds = 3;
  for (int i = 0; i < this->readids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->readids(i).data(), this->readids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->readids(i), output);
  }

  // repeated string writeIds = 4;
  for (int i = 0; i < this->writeids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->writeids(i).data(), this->writeids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->writeids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataAccessUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string source = 2;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source(), target);
  }

  // repeated string readIds = 3;
  for (int i = 0; i < this->readids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->readids(i).data(), this->readids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->readids(i), target);
  }

  // repeated string writeIds = 4;
  for (int i = 0; i < this->writeids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->writeids(i).data(), this->writeids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->writeids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataAccessUnit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string source = 2;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

  }
  // repeated string readIds = 3;
  total_size += 1 * this->readids_size();
  for (int i = 0; i < this->readids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->readids(i));
  }

  // repeated string writeIds = 4;
  total_size += 1 * this->writeids_size();
  for (int i = 0; i < this->writeids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->writeids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataAccessUnit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataAccessUnit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataAccessUnit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataAccessUnit::MergeFrom(const DataAccessUnit& from) {
  GOOGLE_CHECK_NE(&from, this);
  readids_.MergeFrom(from.readids_);
  writeids_.MergeFrom(from.writeids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataAccessUnit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataAccessUnit::CopyFrom(const DataAccessUnit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataAccessUnit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DataAccessUnit::Swap(DataAccessUnit* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(source_, other->source_);
    readids_.Swap(&other->readids_);
    writeids_.Swap(&other->writeids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataAccessUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataAccessUnit_descriptor_;
  metadata.reflection = DataAccessUnit_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace UndoProto

// @@protoc_insertion_point(global_scope)
